image: golang:1.9
options:
  docker: true
pipelines:
  default:
    - step:
        name: "Compile & Test"
        script: &compile
          - export ORIGINAL_DIRECTORY=$(pwd)
          - export DESIRED_DIRECTORY="${GOPATH}/src/github/dadleyy/gendry"
          - export BB_AUTH_STRING="${BB_USERNAME}:${BB_PASSWORD}"
          - export BB_DOWNLOAD_URL_PATH="2.0/repositories/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}/downloads"
          - export BB_DOWNLOAD_URL="https://${BB_AUTH_STRING}@api.bitbucket.org/${BB_DOWNLOAD_URL_PATH}"
          - export ARTIFACT_FILE="${DESIRED_DIRECTORY}/dist/gendry-$(go env GOOS)-$(go env GOARCH).tar.gz"
          - export DOWNLOAD_FILE="gendry-$(go env GOOS)-$(go env GOARCH).${BITBUCKET_COMMIT}.tar.gz"
          - mkdir -p $DESIRED_DIRECTORY
          - pushd $DESIRED_DIRECTORY/..
          - mv $ORIGINAL_DIRECTORY/* $DESIRED_DIRECTORY
          - pushd $DESIRED_DIRECTORY
          - make EXE=./dist/gendry/bin/gendry
          - make test
          - tar -czvf ./dist/gendry-$(go env GOOS)-$(go env GOARCH).tar.gz -C ./dist/gendry ./
          - popd
          - popd
          - mkdir -p ./dist
          - cp $ARTIFACT_FILE ./dist/$DOWNLOAD_FILE
          - curl -X POST $BB_DOWNLOAD_URL --form files=@"./dist/${DOWNLOAD_FILE}"
        artifacts:
          - ./dist/**
          - ./dist/*.tar.gz
    - step:
        name: "Build Image"
        script: &image
          - export DOWNLOAD_FILE="gendry-$(go env GOOS)-$(go env GOARCH).${BITBUCKET_COMMIT}.tar.gz"
          - export DOWNLOAD_URL="https://bitbucket.org/dadleyy/gendry/downloads/${DOWNLOAD_FILE}"
          - wget $DOWNLOAD_URL
          - mv $DOWNLOAD_FILE ./gendry.tar.gz
          - ls -lah
          - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
          - docker build -t dadleyy/gendry:$BITBUCKET_COMMIT -f ./auto/docker/Dockerfile .
          - docker push dadleyy/gendry:$BITBUCKET_COMMIT
  branches:
    deployment:
      - step:
          name: "Compile & Test"
          script: *compile
      - step:
          name: "Build Image"
          script: *image
      - step:
          name: "Deploy Image"
          script:
            - echo "hi"
definitions:
  caches:
